Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G4",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G5",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G6",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G7",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G8",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G9",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G10",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G11",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G12",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G13",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G14",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G15",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G16",
.default = "outro"
)) |>
mutate(Grupo = factor(Grupo, levels = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9",
"G10", "G11", "G12", "G13", "G14", "G15", "G16"))) |>
mutate(Grupo2 = case_when(
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G2",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G3",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G5",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G6",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G9",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G10",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G11",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G12",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G13",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G14",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G15",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G16",
.default = "outro"
)) |>
mutate(Grupo2 = factor(Grupo2, levels = c("G1", "G2", "G3", "G5", "G6", "G9",
"G10", "G11", "G12", "G13", "G14", "G15", "G16")))
names(soybean_data)
# data frame de informações para extração do NASA POWER
dados <- soybean_data |>
select(id, Latitude, Longitude, Plantio, Colheita) |>
distinct(id, .keep_all = TRUE)
View(dados)
table(soybean_data$id)
View(dados)
get_nasap_data <- function(id){
datas <- c(dados$Plantio[id], dados$Colheita[id])
longlat <- c(dados$Longitude[id],dados$Latitude[id])
# comando que extraí os dados da API
daily_ag <- get_power(community = "ag", temporal_api = "daily",
pars = c("ALLSKY_SFC_LW_DWN", "ALLSKY_SFC_SW_DWN",
"PRECTOTCORR", "RH2M", "T2M", "T2MDEW",
"T2M_MAX", "T2M_MIN", "TQV","WS2M"),
lonlat = longlat,
dates =  datas)
nr <- nrow(daily_ag)
daily_ag$ID <- rep(id, nr)
# resumindo a informação do período pra cada id
dados_resumidos <- daily_ag |> group_by(ID) |>
summarise_at(.vars = vars(ALLSKY_SFC_LW_DWN:WS2M), .funs = list(min, max, mean))
dados_resumidos
# # conjunto de dados nasa power resumido pro período
# NSPOW.DT <- data.frame(id = id, Plantio = dados$Plantio[id], Colheita = dados$Colheita[id],
#                        ALLSKY_SFC_LW_DWN_MEAN = mean(daily_ag$ALLSKY_SFC_LW_DWN),
#                        ALLSKY_SFC_SW_DWN_MEAN = mean(daily_ag$ALLSKY_SFC_SW_DWN),
#                        RH2M_MEAN = mean(daily_ag$RH2M),
#                        T2M_MEAN = mean(daily_ag$T2M),
#                        T2MDEW_MEAN = mean(daily_ag$T2MDEW),
#                        T2M_MAX = max(daily_ag$T2M_MAX),
#                        T2M_MIN = min(daily_ag$T2M_MIN),
#                        WS2M_MEAN = mean(daily_ag$WS2M))
# NSPOW.DT
}
# aplicando a função que coleta dos dados da API no vetor de ids
nasaPowerData <- map_df(soybean_data$id, get_nasap_data)
library(readxl)
library(tidyverse)
library(sp)
# loading principal data file
main_data <- read_excel("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
colnames(main_data) <- gsub(pattern = '\\s', replacement = '\\_', x = names(main_data))
main_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura_do_solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date) |>
# correcting planting dates
# corrigindo as datas de plantio
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)
),
# creating harvest date
# criando data de colheita
Colheita = Plantio+Ciclo) |>
# correcting coordinates
# corrigindo coordenadas
separate(Lat._e_Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
# transforming geographic coordinates
# transformando as coordenadas geográficas
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
# creating an identifier
# criando um identificador
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo, sep = "_")),
id = as.numeric(idCombi))
# data frame de informações para extração do NASA POWER
dados <- soybean_data |>
select(id, Latitude, Longitude, Plantio, Colheita) |>
distinct(id, .keep_all = TRUE)
# loading principal data file
main_data <- read_excel("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
# correcting col names
colnames(main_data) <- gsub(pattern = '\\s', replacement = '\\_', x = names(main_data))
soybean_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura_do_solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming categorical variables
# transformando variáveis categóricas
mutate_at(vars(Local,Solo,Cultivar, Textura_do_solo), as.factor) |>
mutate(Anoc = as.factor(Ano)) |>
#transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date)
# correcting coordinates
soybean_data <- soybean_data |>
separate(Lat._e_Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric())
# correcting planting dates
# corrigindo as datas de plantio
soybean_data <- soybean_data |>
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)),
Colheita = Plantio+Ciclo)
# creating the harvest cycle categorical covariate
# criando a covariável categórica de ciclo de colheita
soybean_data <- soybean_data |>
mutate(Ciclo3 = cut(x = Ciclo, breaks = c(-Inf, 105,115,Inf),
labels = c("Precoce","Medio","Tardio"))) |>
mutate(Ciclo4 = cut(x = Ciclo, breaks = c(-Inf, 100, 110, 120, Inf),
labels = c("Super Precoce","Precoce","Medio","Tardio"))) |>
# creating an identifier
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo4, sep = "_")),
id = as.numeric(idCombi))
# creating oceanic season variable
soybean_data <- soybean_data |>
mutate(Temp = case_when(
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 2 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 3 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4,0.2),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 2 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 3 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8,-0.7),
year(Plantio) == 2021 & month(Plantio) == 10 & year(Colheita) == 2022 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-1.0,-1.0,-0.9,-1.0),
year(Plantio) == 2021 & month(Plantio) == 11 & year(Colheita) == 2022 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-1.0,-1.0,-0.9,-1.0,-1.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 2 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 3 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1,0.2),
)) |>
mutate(Caracteristica = cut(Temp, breaks = c(-2, -0.5, 0.5), labels = c("LaNina", "Neutro"))) |>
mutate(Clima = as.factor(cut(Temp, breaks = c(-1.5,-1.0,-0.5,0.5),
labels = c("ModerLaNina","FracoLaNina","Neutro"))))
View(soybean_data)
# data frame de informações para extração do NASA POWER
dados <- soybean_data |>
select(id, Latitude, Longitude, Plantio, Colheita) |>
distinct(id, .keep_all = TRUE)
View(dados)
get_nasap_data <- function(id){
datas <- c(dados$Plantio[id], dados$Colheita[id])
longlat <- c(dados$Longitude[id],dados$Latitude[id])
# comando que extraí os dados da API
daily_ag <- get_power(community = "ag", temporal_api = "daily",
pars = c("ALLSKY_SFC_LW_DWN", "ALLSKY_SFC_SW_DWN",
"PRECTOTCORR", "RH2M", "T2M", "T2MDEW",
"T2M_MAX", "T2M_MIN", "TQV","WS2M"),
lonlat = longlat,
dates =  datas)
nr <- nrow(daily_ag)
daily_ag$ID <- rep(id, nr)
# resumindo a informação do período pra cada id
dados_resumidos <- daily_ag |> group_by(ID) |>
summarise_at(.vars = vars(ALLSKY_SFC_LW_DWN:WS2M), .funs = list(min, max, mean))
dados_resumidos
# # conjunto de dados nasa power resumido pro período
# NSPOW.DT <- data.frame(id = id, Plantio = dados$Plantio[id], Colheita = dados$Colheita[id],
#                        ALLSKY_SFC_LW_DWN_MEAN = mean(daily_ag$ALLSKY_SFC_LW_DWN),
#                        ALLSKY_SFC_SW_DWN_MEAN = mean(daily_ag$ALLSKY_SFC_SW_DWN),
#                        RH2M_MEAN = mean(daily_ag$RH2M),
#                        T2M_MEAN = mean(daily_ag$T2M),
#                        T2MDEW_MEAN = mean(daily_ag$T2MDEW),
#                        T2M_MAX = max(daily_ag$T2M_MAX),
#                        T2M_MIN = min(daily_ag$T2M_MIN),
#                        WS2M_MEAN = mean(daily_ag$WS2M))
# NSPOW.DT
}
# aplicando a função que coleta dos dados da API no vetor de ids
nasaPowerData <- map_df(dados$id, get_nasap_data)
library("nasapower")
get_nasap_data <- function(id){
datas <- c(dados$Plantio[id], dados$Colheita[id])
longlat <- c(dados$Longitude[id],dados$Latitude[id])
# comando que extraí os dados da API
daily_ag <- get_power(community = "ag", temporal_api = "daily",
pars = c("ALLSKY_SFC_LW_DWN", "ALLSKY_SFC_SW_DWN",
"PRECTOTCORR", "RH2M", "T2M", "T2MDEW",
"T2M_MAX", "T2M_MIN", "TQV","WS2M"),
lonlat = longlat,
dates =  datas)
nr <- nrow(daily_ag)
daily_ag$ID <- rep(id, nr)
# resumindo a informação do período pra cada id
dados_resumidos <- daily_ag |> group_by(ID) |>
summarise_at(.vars = vars(ALLSKY_SFC_LW_DWN:WS2M), .funs = list(min, max, mean))
dados_resumidos
# # conjunto de dados nasa power resumido pro período
# NSPOW.DT <- data.frame(id = id, Plantio = dados$Plantio[id], Colheita = dados$Colheita[id],
#                        ALLSKY_SFC_LW_DWN_MEAN = mean(daily_ag$ALLSKY_SFC_LW_DWN),
#                        ALLSKY_SFC_SW_DWN_MEAN = mean(daily_ag$ALLSKY_SFC_SW_DWN),
#                        RH2M_MEAN = mean(daily_ag$RH2M),
#                        T2M_MEAN = mean(daily_ag$T2M),
#                        T2MDEW_MEAN = mean(daily_ag$T2MDEW),
#                        T2M_MAX = max(daily_ag$T2M_MAX),
#                        T2M_MIN = min(daily_ag$T2M_MIN),
#                        WS2M_MEAN = mean(daily_ag$WS2M))
# NSPOW.DT
}
# aplicando a função que coleta dos dados da API no vetor de ids
nasaPowerData <- map_df(dados$id, get_nasap_data)
View(nasaPowerData)
# loading principal data file
main_data <- read_excel("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
colnames(main_data) <- gsub(pattern = '\\s', replacement = '\\_', x = names(main_data))
main_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura_do_solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date) |>
# correcting planting dates
# corrigindo as datas de plantio
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)
),
# creating harvest date
# criando data de colheita
Colheita = Plantio+Ciclo) |>
# correcting coordinates
# corrigindo coordenadas
separate(Lat._e_Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
# transforming geographic coordinates
# transformando as coordenadas geográficas
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
# creating an identifier
# criando um identificador
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo, sep = "_")),
id = as.numeric(idCombi))
# data frame de informações para extração do NASA POWER
dados <- main_data |>
select(id, Latitude, Longitude, Plantio, Colheita) |>
distinct(id, .keep_all = TRUE)
# aplicando a função que coleta dos dados da API no vetor de ids
nasaPowerData <- map_df(dados$id, get_nasap_data)
View(nasaPowerData)
variavs <- nasaPowerData |>
mutate(ID = nasaPowerData$ID,
ALLSKY_SFC_LW_DWN_MEAN = nasaPowerData$ALLSKY_SFC_LW_DWN_fn3,
ALLSKY_SFC_SW_DWN_MEAN = nasaPowerData$ALLSKY_SFC_SW_DWN_fn3,
PRECTOTCORR_MEAN = nasaPowerData$PRECTOTCORR_fn3,
RH2M_MEAN = nasaPowerData$RH2M_fn3,
T2M_MEAN = nasaPowerData$T2M_fn3,
T2MDEW_MEAN = nasaPowerData$T2MDEW_fn3,
T2M_MAX = nasaPowerData$T2M_MAX_fn2,
T2M_MIN = nasaPowerData$T2M_MIN_fn1,
TQV_MEAN = nasaPowerData$TQV_fn3,
WS2M_MEAN = nasaPowerData$WS2M_fn3)
variavs <- nasaPowerData |>
select(ID = nasaPowerData$ID,
ALLSKY_SFC_LW_DWN_MEAN = nasaPowerData$ALLSKY_SFC_LW_DWN_fn3,
ALLSKY_SFC_SW_DWN_MEAN = nasaPowerData$ALLSKY_SFC_SW_DWN_fn3,
PRECTOTCORR_MEAN = nasaPowerData$PRECTOTCORR_fn3,
RH2M_MEAN = nasaPowerData$RH2M_fn3,
T2M_MEAN = nasaPowerData$T2M_fn3,
T2MDEW_MEAN = nasaPowerData$T2MDEW_fn3,
T2M_MAX = nasaPowerData$T2M_MAX_fn2,
T2M_MIN = nasaPowerData$T2M_MIN_fn1,
TQV_MEAN = nasaPowerData$TQV_fn3,
WS2M_MEAN = nasaPowerData$WS2M_fn3)
View(variavs)
variavs <- variavs[,c(1,32:41)]
View(variavs)
table(soybean_data$id)
table(main_data$id)
table(soybean_data$Cultivar)
table(main_data$id)
View(variavs)
View(main_data)
names(main_data)
colnames(main_data[18]) <- "ID"
View(main_data)
?colnames
colnames(main_data[,18]) <- "ID"
View(main_data)
colnames(main_data$id) <- "ID"
aa <- names(main_data)
aa[18] <- "ID"
aa
colnames(main_data) <- aa
DADOS.FINAL <- left_join(x = main_data, y = variavs, by = "ID")
View(DADOS.FINAL)
View(nasaPowerData)
mod <- lm(kgha ~ Solo + T2M_MEAN + PRECTOTCORR_MEAN + WS2M_MEAN, data = DADOS.FINAL)
summary(mod)
# loading principal data file
main_data <- read_excel("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
# correcting col names
colnames(main_data) <- gsub(pattern = '\\s', replacement = '\\_', x = names(main_data))
soybean_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura_do_solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming categorical variables
# transformando variáveis categóricas
mutate_at(vars(Local,Solo,Cultivar, Textura_do_solo), as.factor) |>
mutate(Anoc = as.factor(Ano)) |>
#transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date)
# correcting coordinates
soybean_data <- soybean_data |>
separate(Lat._e_Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric())
# correcting planting dates
# corrigindo as datas de plantio
soybean_data <- soybean_data |>
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)),
Colheita = Plantio+Ciclo)
# creating the harvest cycle categorical covariate
# criando a covariável categórica de ciclo de colheita
soybean_data <- soybean_data |>
mutate(Ciclo3 = cut(x = Ciclo, breaks = c(-Inf, 105,115,Inf),
labels = c("Precoce","Medio","Tardio"))) |>
mutate(Ciclo4 = cut(x = Ciclo, breaks = c(-Inf, 100, 110, 120, Inf),
labels = c("Super Precoce","Precoce","Medio","Tardio"))) |>
# creating an identifier
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo, sep = "_")),
id = as.numeric(idCombi))
# creating oceanic season variable
soybean_data <- soybean_data |>
mutate(Temp = case_when(
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 2 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 3 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4,0.2),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 2 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 3 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8,-0.7),
year(Plantio) == 2021 & month(Plantio) == 10 & year(Colheita) == 2022 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-1.0,-1.0,-0.9,-1.0),
year(Plantio) == 2021 & month(Plantio) == 11 & year(Colheita) == 2022 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-1.0,-1.0,-0.9,-1.0,-1.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 2 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 3 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1,0.2),
)) |>
mutate(Caracteristica = cut(Temp, breaks = c(-2, -0.5, 0.5), labels = c("LaNina", "Neutro"))) |>
mutate(Clima = as.factor(cut(Temp, breaks = c(-1.5,-1.0,-0.5,0.5),
labels = c("ModerLaNina","FracoLaNina","Neutro"))))
# data frame de informações para extração do NASA POWER
dados <- main_data |>
select(id, Latitude, Longitude, Plantio, Colheita) |>
distinct(id, .keep_all = TRUE)
# data frame de informações para extração do NASA POWER
dados <- soybean_data |>
select(id, Latitude, Longitude, Plantio, Colheita) |>
distinct(id, .keep_all = TRUE)
View(dados)
# creating the harvest cycle categorical covariate
# criando a covariável categórica de ciclo de colheita
soybean_data <- soybean_data |>
mutate(Ciclo3 = cut(x = Ciclo, breaks = c(-Inf, 105,115,Inf),
labels = c("Precoce","Medio","Tardio"))) |>
mutate(Ciclo4 = cut(x = Ciclo, breaks = c(-Inf, 100, 110, 120, Inf),
labels = c("Super Precoce","Precoce","Medio","Tardio"))) |>
# creating an identifier
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo, sep = "_")),
ID = as.numeric(idCombi))
# creating oceanic season variable
soybean_data <- soybean_data |>
mutate(Temp = case_when(
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 2 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 3 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4,0.2),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 2 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 3 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8,-0.7),
year(Plantio) == 2021 & month(Plantio) == 10 & year(Colheita) == 2022 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-1.0,-1.0,-0.9,-1.0),
year(Plantio) == 2021 & month(Plantio) == 11 & year(Colheita) == 2022 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-1.0,-1.0,-0.9,-1.0,-1.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 2 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 3 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1,0.2),
)) |>
mutate(Caracteristica = cut(Temp, breaks = c(-2, -0.5, 0.5), labels = c("LaNina", "Neutro"))) |>
mutate(Clima = as.factor(cut(Temp, breaks = c(-1.5,-1.0,-0.5,0.5),
labels = c("ModerLaNina","FracoLaNina","Neutro"))))
View(soybean_data)
DADOS.FINAL <- left_join(x = soybean_data, y = variavs, by = "ID")
View(DADOS.FINAL)
names(DADOS.FINAL)
mod <- lm(kgha ~ Solo + Ciclo4 + Clima + PRECTOTCORR_MEAN + T2M_MEAN + WS2M_MEAN + TQV_MEAN, data = DADOS.FINAL)
summary(mod)
shapiro.test(residuals(object = mod, type = "pearson"))
write.csv(x = DADOS.FINAL, file = "DADOS.FINAL")
