tseries::jarque.bera.test(residuals(mod1.lm))
plot(mod1.lm, which=3)
# Plintossolo apresenta maior variabilidade
boxplot(rstandard(mod1.lm) ~ soybean_data$Solo,
xlab="Solo", ylab="Resíduos", main="Modelo LM triplo Var Independente")
# há maior variabilidade nos Ciclos Médio e Tardio
boxplot(rstandard(mod1.lm) ~ soybean_data$Ciclo4,
xlab="Ciclo", ylab="Resíduos", main="Modelo LM triplo Var Independente")
# LaNina apresenta maior variabilidade que o Neutro
boxplot(rstandard(mod1.lm) ~ soybean_data$Caracteristica,
xlab="Caracteristica", ylab="Resíduos", main="Modelo LM triplo Var Independente")
# há uma variabilidade significativa nos diferentes genótipos
boxplot(rstandard(mod1.lm) ~ soybean_data$Cultivar,
xlab="Cultivar", ylab="Resíduos", main="Modelo LM triplo Var Independente")
# transformação Box-Cox
bc <- MASS::boxcox(mod1.lm)
lambda <- bc$x[which.max(bc$y)]
soybean_data$respT <- (soybean_data$kgha^lambda - 1)/lambda
# mod linear com a var resposta transformada
mod2.lm <- lm(respT ~ Solo*Ciclo4*Caracteristica, data = soybean_data)
summary(mod2.lm)
lmtest::bptest(mod2.lm) # heterocedasticidade residual
tseries::jarque.bera.test(residuals(mod2.lm)) # residuos normais
# mod gls com interação tripla e variância no Cultivar
mod1.gls <- gls(model = kgha ~ Solo*Ciclo4*Caracteristica,
data = soybean_data, weights = varIdent(form = ~1|Cultivar))
summary(mod1.gls)
tseries::jarque.bera.test(residuals(mod1.gls)) # rejeita normalidade
boxplot(resid(mod1.gls, type = "normalized") ~ Cultivar,
xlab="Cultivar", ylab="Resíduos", main="Modelo GLS triplo Var no Cultivar")
mod2.gls <- gls(model = kgha ~ Grupo, data = soybean_data,
weights = varIdent(form = ~1|Cultivar))
summary(mod2.gls)
mod3.gls <- gls(model = kgha ~ Grupo3, data = soybean_data,
weights = varIdent(form = ~1|Cultivar))
summary(mod3.gls)
length(mod3.gls$coefficients)
summary(mod1.gls)
mod1.lme <- lme(fixed = kgha ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
summary(mod1.lme)
mod2.lme <- lme(fixed = kgha ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
summary(mod2.lme)
mod4.lme <- lme(fixed = kgha ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
summary(mod4.lme)
mod1.glmm <- lme4::glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = binomial())
mod1.glmm <- lme4::glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = poisson())
summary(mod1.glmm)
?glm
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + theme_light() + theme(axis.text.x = element_blank())
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_violin() + theme_light() + theme(axis.text.x = element_blank())
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_violin() + theme_light()
##### Densidade por Grupo do Ciclo e SOLO #####
sample_size = soybean_data %>% group_by(Ciclo4, Caracteristica) %>% summarize(num=n())
soybean_data %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Ciclo4, "\n", Caracteristica, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Ano e Solo") +
xlab("")
summary(mod1.gls)
summary(mod1.gls)
summary(mod1.lme)
summary(mod2.lme)
summary(mod3.lme)
mod3.lme <- lme(fixed = kgha ~ Grupo, data = soybean_data, random = ~1|Cultivar)
summary(mod1.lme)
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_violin() + theme_light()
ggplot(soybean_data, aes(x = Solo, y = kgha)) +
geom_violin() + facet_grid(Solo~.)  + theme_light()
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_violin() + facet_grid(Solo~.)  + theme_light()
summary(mod3.lme)
summary(mod4.lme)
tseries::jarque.bera.test(residuals(mod4.lme)) # rejeita normalidade
car::leveneTest(residuals(mod4.lme) ~ Cultivar) # rejeita homocedasticidade
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_violin() + facet_grid(Solo~Ciclo4)  + theme_light()
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4)  + theme_light()
View(soybean_data)
# GRÁFICO IMPORTANTE
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4)  +
geom_jitter(shape = 16, alpha = 0.5, color = "red") +
theme_light()
# GRÁFICO IMPORTANTE
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4) +
theme_light()
# GRÁFICO IMPORTANTE
p <- ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4) +
theme_light()
# GRÁFICO IMPORTANTE
boxplot <- ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4) +
theme_light()
# Adicionar rótulos aos outliers
outliers <- boxplot.stats(soybean_data$kgha)$out
outlier_rows <- which(soybean_data$kgha %in% outliers)
p + geom_text(data = dados[outlier_rows,], aes(label = outlier_rows), vjust = -1)
p + geom_text(data = soybean_data[outlier_rows,], aes(label = outlier_rows), vjust = -1)
p + geom_text(data = soybean_data[outlier_rows,], aes(label = outlier_rows),vjust=-1)
boxplot.stats()
boxplot.stats()$out
outliers
?boxplot.stats
filtered_data <- soybean_data %>%
filter(if_any(everything(), Solo == "Latossolo" & kgha > 6000))
filtered_data <- soybean_data %>%
filter(if_any(everything(), ~ Solo == "Latossolo" & kgha > 6000))
View(filtered_data)
View(soybean_data)
filtered_data <- soybean_data |>
filter(if_any(everything(), ~ Solo == "Latossolo" & kgha > 6000)) |>
filter(if_all(everything(), ~ Solo == "Plintossolo" & Ciclo4 == "Precoce" & Ciclo4 == "Medio" & kgha > 6100)) |>
filter(if_all(everything(), ~ Solo == "Latossolo" & Ciclo4 == "Precoce" & kgha < 2200))
filtered_data <- soybean_data |>
filter(if_any(everything(), ~ Solo == "Latossolo" & kgha > 6000)) |>
filter(if_all(everything(), ~ Solo == "Plintossolo" & Ciclo4 == "Precoce" & kgha > 6100)) |>
filter(if_all(everything(), ~ Solo == "Latossolo" & Ciclo4 == "Precoce" & kgha < 2200))
filtered_data <- soybean_data |>
filter(if_any(everything(), ~ Solo == "Latossolo" & kgha > 6000)) |>
filter(if_all(everything(), ~ Solo == "Plintossolo" & Ciclo4 == "Precoce" & kgha > 6100)) |>
filter(if_all(everything(), ~ Solo == "Latossolo" & Ciclo4 == "Precoce" & kgha < 2200))
filtered_data <- soybean_data |>
filter(if_all(everything(), ~ Solo == "Latossolo" & kgha > 6000)) |>
filter(if_all(everything(), ~ Solo == "Plintossolo" & Ciclo4 == "Precoce" & kgha > 6100)) |>
filter(if_all(everything(), ~ Solo == "Latossolo" & Ciclo4 == "Precoce" & kgha < 2200))
filtered_data <- soybean_data |>
filter(if_any(everything(), ~ Solo == "Latossolo" & kgha > 6000)) |>
filter(if_any(everything(), ~ Solo == "Plintossolo" & Ciclo4 == "Precoce" & kgha > 6100)) |>
filter(if_any(everything(), ~ Solo == "Latossolo" & Ciclo4 == "Precoce" & kgha < 2200))
filtered_data <- soybean_data %>%
filter(Solo == "Latossolo" & kgha > 6000) %>%
bind_rows(soybean_data %>%
filter(Solo == "Plintossolo" & Ciclo4 == "Precoce" & kgha > 6100)) %>%
bind_rows(soybean_data %>%
filter(Solo == "Latossolo" & Ciclo4 == "Precoce" & kgha < 2200))
View(filtered_data)
rm(list = ls())
library(xlsx)
library(tidyverse)
library(sp)
library(nlme)
# loading principal data file
main_data <- read.xlsx("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx", sheetIndex = 1)
main_data <- main_data[,1:12]
soybean_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura.do.solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming categorical variables
# transformando variáveis categóricas
mutate_at(vars(Local,Solo,Cultivar, Textura.do.solo), as.factor) |>
mutate(Anoc = as.factor(Ano)) |>
#transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date)
# correcting coordinates
soybean_data <- soybean_data |>
separate(Lat..e.Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric())
# correcting planting dates
# corrigindo as datas de plantio
soybean_data <- soybean_data |>
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)),
Colheita = Plantio+Ciclo)
# creating the harvest cycle categorical covariate
# criando a covariável categórica de ciclo de colheita
soybean_data <- soybean_data |>
mutate(Ciclo4 = cut(x = Ciclo, breaks = c(-Inf, 100, 110, 120, Inf),
labels = c("Super Precoce","Precoce","Medio","Tardio"))) |>
# creating an identifier
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo4, sep = "_")),
id = as.numeric(idCombi))
# creating oceanic season variable
soybean_data <- soybean_data |>
mutate(Temp = case_when(
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 2 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 3 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4,0.2),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 2 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 3 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8,-0.7),
year(Plantio) == 2021 & month(Plantio) == 10 & year(Colheita) == 2022 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-1.0,-1.0,-0.9,-1.0),
year(Plantio) == 2021 & month(Plantio) == 11 & year(Colheita) == 2022 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-1.0,-1.0,-0.9,-1.0,-1.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 2 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 3 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1,0.2),
)) |>
mutate(Caracteristica = cut(Temp, breaks = c(-2, -0.5, 0.5), labels = c("LaNina", "Neutro")))
# creating Group variable of interactions Solo, Ciclo and Caracteristica
soybean_data <- soybean_data |>
mutate(tha = kgha/1000) |>
mutate(Grupo = case_when(
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G2",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G3",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G4",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G5",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G6",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G7",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G8",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G9",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G10",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G11",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G12",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G13",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G14",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G15",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G16",
.default = "outro"
)) |>
mutate(Grupo = factor(Grupo, levels = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9",
"G10", "G11", "G12", "G13", "G14", "G15", "G16")))
attach(soybean_data)
ggplot(soybean_data, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4) +
theme_light()
names(soybean_data)
?geom_boxplot
install.packages("ggstatsplot")
?ggbetweenstats
findoutlier <- function(x) {
return(x < quantile(x, .25) - 1.5*IQR(x) | x > quantile(x, .75) + 1.5*IQR(x))
}
View(soybean_data)
soybean_data <- mutate(soybean_data, nrow = nrow(.))
soybean_data <- soybean_data |> mutate(numer = 1:nrow(soybean_data))
View(soybean_data)
df <- soybean_data %>%
group_by(Caracteristica, Solo, Ciclo4) %>%
mutate(outlier = ifelse(findoutlier(kgha), numer, NA))
ggplot(df, aes(x = Caracteristica, y = kgha)) +
geom_boxplot() + facet_grid(Solo~Ciclo4) +
geom_text(aes(label=outlier), na.rm=TRUE, hjust=-.5)
View(df)
table(df$outlier)
soybean_data <- soybean_data %>%
group_by(Caracteristica, Solo, Ciclo4) %>%
mutate(outlier = ifelse(findoutlier(kgha), numer, NA))
filtered_data <- soybean_data |>
filter(outlier)
unique(soybean_data$outlier)
!(is.na(soybean_data$outlier))
soybean_data$outlier
out <- na.omit(soybean_data$outlier)
out
out <- as.numeric(soybean_data)
out <- as.numeric(na.omit(soybean_data$outlier))
out
filtered_data <- soybean_data |>
select(id, Local, Ano, Cultivar, Bloco, kgha, Plantio, Ciclo, Colheita,
Solo, Ciclo4, Caracteristica) |>
filter(numer == out)
soybean_data <- soybean_data %>%
group_by(Caracteristica, Solo, Ciclo4) %>%
mutate(outlier = ifelse(findoutlier(kgha), numer, NA))
filtered_data <- soybean_data |>
select(id, Local, Ano, Cultivar, Bloco, kgha, Plantio, Ciclo, Colheita,
Solo, Ciclo4, Caracteristica) |>
filter(numer == out)
View(soybean_data)
names(soybean_data)
filtered_data <- soybean_data |>
select(id, Local, Ano, Cultivar, Bloco, kgha, Plantio, Ciclo, Colheita,
Solo, Ciclo4, Caracteristica) |>
filter(numer == out)
filtered_data <- soybean_data[out,]
View(filtered_data)
View(filtered_data)
filtered_data$Cultivar
14*4
filtered_data <- soybean_data |>
filter(Ano == 2021 $ Solo == "Latossolo" & Cultivar == "BMXBonus") |>
filtered_data <- soybean_data |>
filter(Ano == 2021 $ Solo == "Latossolo" & Cultivar == "BMXBonus") |>
filtered_data <- soybean_data |>
filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXBonus") |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "RK7518IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXExtremaIPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXExtremaIPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BRSGO7755RR"))|>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "CZ37B43IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "DM80I79IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "DM82I78IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "P98Y21IPRO"))  |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Plintossolo" & Cultivar == "CZ37B43IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "M8644IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "M8644IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "W791")) |>
bind_rows(soybean_data |> filter(Ano == 2018 & Solo == "Latossolo" & Cultivar == "BRS230068"))
View(filtered_data)
table(filtered_data$Bloco)
15*4
table(filtered_data$Cultivar)
filtered_data <- soybean_data[out,]
View(filtered_data)
View(soybean_data)
filtered_data <- soybean_data |>
filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXBonus") |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "RK7518IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXExtremaIPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BRSGO7755RR"))|>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "CZ37B43IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "DM80I79IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "DM82I78IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "P98Y21IPRO"))  |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Plintossolo" & Cultivar == "CZ37B43IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "M8644IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "M8644IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "W791")) |>
bind_rows(soybean_data |> filter(Ano == 2018 & Solo == "Latossolo" & Cultivar == "BRS230068"))
13*4
52-56
table(filtered_data$Cultivar)
filtered_data <- soybean_data[out,]
View(filtered_data)
filtered_data <- soybean_data |>
filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXBonus") |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "RK7518IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BMXExtremaIPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "BRSGO7755RR"))|>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "CZ37B43IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "DM80I79IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "DM82I78IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Latossolo" & Cultivar == "P98Y21IPRO"))  |>
bind_rows(soybean_data |> filter(Ano == 2021 & Solo == "Plintossolo" & Cultivar == "CZ37B43IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "M8644IPRO")) |>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "M8644IPRO"))|>
bind_rows(soybean_data |> filter(Ano == 2020 & Solo == "Latossolo" & Cultivar == "W791")) |>
bind_rows(soybean_data |> filter(Local == "Aparecida do Rio Negro" & Ano == 2018 & Solo == "Latossolo" & Cultivar == "BRS230068"))
13*4
write.xlsx(x = filtered_data, file = "Produtividade_Soja_Outliers.xlsx")
write.csv(x = filtered_data, file = "Produtividade_Soja_Outliers.csv")
rm(list = ls())
library(xlsx)
library(tidyverse)
library(sp)
library(nlme)
# loading principal data file
main_data <- read.xlsx("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx", sheetIndex = 1)
main_data <- main_data[,1:12]
soybean_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura.do.solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming categorical variables
# transformando variáveis categóricas
mutate_at(vars(Local,Solo,Cultivar, Textura.do.solo), as.factor) |>
mutate(Anoc = as.factor(Ano)) |>
#transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date)
# correcting coordinates
soybean_data <- soybean_data |>
separate(Lat..e.Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric())
# correcting planting dates
# corrigindo as datas de plantio
soybean_data <- soybean_data |>
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)),
Colheita = Plantio+Ciclo)
# creating the harvest cycle categorical covariate
# criando a covariável categórica de ciclo de colheita
soybean_data <- soybean_data |>
mutate(Ciclo4 = cut(x = Ciclo, breaks = c(-Inf, 100, 110, 120, Inf),
labels = c("Super Precoce","Precoce","Medio","Tardio"))) |>
# creating an identifier
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo4, sep = "_")),
id = as.numeric(idCombi))
# creating oceanic season variable
soybean_data <- soybean_data |>
mutate(Temp = case_when(
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 2 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 3 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4,0.2),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 2 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 3 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8,-0.7),
year(Plantio) == 2021 & month(Plantio) == 10 & year(Colheita) == 2022 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-1.0,-1.0,-0.9,-1.0),
year(Plantio) == 2021 & month(Plantio) == 11 & year(Colheita) == 2022 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-1.0,-1.0,-0.9,-1.0,-1.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 2 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 3 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1,0.2),
)) |>
mutate(Caracteristica = cut(Temp, breaks = c(-2, -0.5, 0.5), labels = c("LaNina", "Neutro")))
View(soybean_data)
# row number
soybean_data <- soybean_data |> mutate(nrow = 1:nrow(soybean_data))
View(soybean_data)
993-5
# excluding outliers from the dataset
soybean_data <- soybean_data |>
filter(id != c(265,289,316,374,770))
?filter
# excluding outliers from the dataset
test <- soybean_data |>
filter(id %in% c(265,289,316,374,770))
View(test)
# excluding outliers from the dataset
test <- soybean_data |>
filter(!id %in% c(265,289,316,374,770))
# excluding outliers from the dataset
test <- soybean_data |>
filter(!id == c(265,289,316,374,770))
# excluding outliers from the dataset
test <- subset(soybean_data, subset = id!= c(265,289,316,374,770))
?subset
# excluding outliers from the dataset
test <- subset(soybean_data, !(id %in% c(265, 289, 316, 374, 770)))
data_subset = test[!test[, "id"] %in% c(265, 289, 316, 374, 770), ]
test[, "id"]
ids.remove <- c(265, 289, 316, 374, 770)
test=subset(test, !(is %in% ids.remove))
# excluding outliers from the dataset
test <- test[-c(265, 289, 316, 374, 770),]
View(soybean_data)
View(test)
# excluding outliers from the dataset
soybean_data <- soybean_data[-c(265, 289, 316, 374, 770),]
hist(soybean_data$kgha)
hist(data_subset$kgha)
shapiro.test(soybean_data$kgha)
tseries::jarque.bera.test(soybean_data$kgha)
??jarque.bera.test
# mod misto com interação tripla
mod1.lme <- lme(kgha ~ Solo*Ciclo4*Caracteristica, data = soybean_data, random = ~1|Cultivar)
summary(mod1.lme)
car::leveneTest(residuals(mod1.lme) ~ soybean_data$Cultivar) # testa homocedasticidade
tseries::jarque.bera.test(residuals(mod1.lme)) # testa normalidade
# mod misto com interações duplas
mod2.lme <- lme(fixed = kgha ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
summary(mod2.lme)
car::leveneTest(residuals(mod2.lme) ~ soybean_data$Cultivar) # testa homocedasticidade
tseries::jarque.bera.test(residuals(mod2.lme)) # testa normalidade
# mod misto sem interação Solo Caracteristica
mod3.lme <- lme(fixed = kgha ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
# mod3 <- lmerTest::lmer(kgha ~ Solo*Ciclo4 + Ciclo4*Caracteristica + (1|Cultivar), soybean_data)
summary(mod3.lme)
car::leveneTest(residuals(mod3.lme) ~ soybean_data$Cultivar) # testa homocedasticidade
tseries::jarque.bera.test(residuals(mod3.lme)) # testa normalidade
