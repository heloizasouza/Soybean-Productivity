tseries::jarque.bera.test(resid(mod9.lme)) # rejeita normalidade
shapiro.test(resid(mod9.lme))
car::leveneTest(resid(mod9.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod10.lme <- lme(fixed = (kgha)^0.47 ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod5.lme)) # rejeita normalidade
shapiro.test(resid(mod5.lme))
car::leveneTest(resid(mod5.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod11.lme <- lme(fixed = (kgha)^0.47 ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod6.lme)) # rejeita normalidade
shapiro.test(resid(mod6.lme))
car::leveneTest(resid(mod6.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
tseries::jarque.bera.test(resid(mod10.lme)) # rejeita normalidade
shapiro.test(resid(mod10.lme))
car::leveneTest(resid(mod10.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
tseries::jarque.bera.test(resid(mod11.lme)) # rejeita normalidade
shapiro.test(resid(mod11.lme))
car::leveneTest(resid(mod11.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
tseries::jarque.bera.test(resid(mod12.lme)) # rejeita normalidade
mod12.lme <- lme(fixed = (kgha)^0.47 ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
summary(mod12.lme)
tseries::jarque.bera.test(resid(mod12.lme)) # rejeita normalidade
shapiro.test(resid(mod12.lme))
car::leveneTest(resid(mod12.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
summary(mod12.lme)
mod13.lme <- lme(fixed = (kgha)^0.47 ~ Grupo, data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod13.lme)) # rejeita normalidade
shapiro.test(resid(mod13.lme))
shapiro.test(resid(mod12.lme))
car::leveneTest(resid(mod13.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
summary(mod13.lme)
mod14.lme <- lme(fixed = (kgha)^0.47 ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod14.lme)) # rejeita normalidade
shapiro.test(resid(mod14.lme))
car::leveneTest(resid(mod14.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
summary(mod14.lme)
mod15.lme <- lme(fixed =  log(kgha) ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod15.lme)) # rejeita normalidade
shapiro.test(resid(mod15.lme))
car::leveneTest(resid(mod15.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod16.lme <- lme(fixed =  log(kgha) ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod16.lme)) # rejeita normalidade
shapiro.test(resid(mod16.lme))
car::leveneTest(resid(mod16.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod17.lme <- lme(fixed =  log(kgha) ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod17.lme)) # rejeita normalidade
shapiro.test(resid(mod17.lme))
car::leveneTest(resid(mod17.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod18.lme <- lme(fixed =  log(kgha) ~ Grupo, data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod18.lme)) # rejeita normalidade
shapiro.test(resid(mod18.lme))
car::leveneTest(resid(mod18.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod19.lme <- lme(fixed =  log(kgha) ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod19.lme)) # rejeita normalidade
shapiro.test(resid(mod19.lme))
car::leveneTest(resid(mod19.lme) ~ Cultivar, soybean_data) # rejeita homocedasticidade
mod1.glmm <- lme4::glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
tseries::jarque.bera.test(ranef(mod1.glmm))
ranef(mod1.glmm)
View(mod1.glmm)
# Refit a fitted model with all available optimizers
gm_all <- allFit(mod1.glmm)
View(gm_all)
ss <- summary(gm_all)
View(ss)
View(mod3.lme)
View(mod1.glmm)
summary(mod1.glmm)
mod1.glmm@u
mod3.lme[["coefficients"]][["random"]][["Cultivar"]]
ranef(mod1.glmm)
shapiro.test(ranef(mod1.glmm))
ranef(mod1.glmm)
typeof(ranef(mod1.glmm))
typeof(ranef(mod1.glmm)[1])
typeof(ranef(mod1.glmm)[[1]])
mod1.glmm
mod1.glmm@theta
mod1.glmm@beta
mod1.glmm@u
shapiro.test(mod1.glmm@u)
plot(mod1.glmm)
testDispersion(mod1.glmm)
simulationOutput <- simulateResiduals(fittedModel = mod1.glmm, plot = F)
testDispersion(simulationOutput)
plot(simulationOutput)
hist(residuals(simulationOutput))
plot(residuals(simulationOutput))
par(mfrow=c(1,1))
plot(residuals(simulationOutput))
plot(residuals(simulationOutput, quantileFunction = qnorm, outlierValues = c(-7,7)))
shapiro.test(residuals(simulationOutput, quantileFunction = qnorm, outlierValues = c(-7,7)))
?testUniformity
testUniformity(simulationOutput)
ks.test(simulationOutput)
View(simulationOutput)
ks.test(residuals(simulationOutput))
ks.test(simulationOutput$fittedResiduals)
ks.test(simulationOutput$fittedResiduals, "dunif")
?dunif
testUniformity(simulationOutput)
ks.test(simulationOutput$scaledResiduals, "dunif")
range(simulationOutput$scaledResiduals)
ks.test(simulationOutput$scaledResiduals, "dunif", min = 0, max=1)
# faz testes baseados em simulação para sobre/subdispersão
testDispersion(simulationOutput, type = "PearsonChisq")
#ks.test(simulationOutput$scaledResiduals, "dunif")
plot(simulationOutput)
testResiduals(simulationOutput, plot = F)
testQuantiles(simulationOutput)
par(mfrow=c(1,3))
plotResiduals(simulationOutput, form = soybean_data$Solo)
plotResiduals(simulationOutput, form = soybean_data$Ciclo4)
plotResiduals(simulationOutput, form = soybean_data$Caracteristica)
library(xlsx)
library(tidyverse)
library(sp)
library(nlme)
library(lme4)
# loading principal data file
main_data <- read.xlsx("Data/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx", sheetIndex = 1)
main_data <- main_data[,1:12]
soybean_data <- main_data |>
# removing accents
# removendo acentos
mutate_at(vars(Local, Textura.do.solo, Cultivar),
~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# transforming categorical variables
# transformando variáveis categóricas
mutate_at(vars(Local,Solo,Cultivar, Textura.do.solo), as.factor) |>
mutate(Anoc = as.factor(Ano)) |>
#transforming the Date covariate
# transformando a covariável de Data
mutate_at(vars(Plantio), as.Date)
# correcting coordinates
soybean_data <- soybean_data |>
separate(Lat..e.Long., into = c("Latit", "Longit"), sep = ";") |>
mutate(Latit = case_when(
Local == "Pium" ~ "10°12' 58'' S",
Local == "Paraiso do Tocantins" ~ "10°11' 16.9'' S",
Local == "Pedro Afonso" ~ "08°58' 03'' S",
Local == "Aparecida do Rio Negro" ~ "09°57' 07'' S",
Local == "Lagoa da Confusao" ~ "10°47' 37'' S",
TRUE ~ as.character(Latit)
),
Longit = case_when(
Local == "Pium" ~ "49°15' 1.4'' W",
Local == "Paraiso do Tocantins" ~ "48°40' 54.6'' W",
Local == "Goiania" ~ "49°30' 11'' W",
Local == "Pedro Afonso" ~ "48°10' 29'' W",
Local == "Aparecida do Rio Negro" ~ "47°58' 19'' W",
Local == "Lagoa da Confusao" ~ "49°37' 25'' W",
TRUE ~ as.character(Longit)
)) |>
mutate(Latitude = char2dms(from = Latit,chd = "°", chm = "'", chs = "''")
|> as.numeric()) |>
mutate(Longitude = char2dms(from = Longit,chd = "°", chm = "'", chs = "''")
|> as.numeric())
# correcting planting dates
# corrigindo as datas de plantio
soybean_data <- soybean_data |>
mutate(Plantio = case_when(
Plantio == "2022-01-17" ~ as.Date("2022-11-17"),
Plantio == "2021-11-23" ~ as.Date("2022-11-23"),
TRUE ~ as.Date(Plantio)),
Colheita = Plantio+Ciclo)
# creating the harvest cycle categorical covariate
# criando a covariável categórica de ciclo de colheita
soybean_data <- soybean_data |>
mutate(Ciclo4 = cut(x = Ciclo, breaks = c(-Inf, 100, 110, 120, Inf),
labels = c("Super Precoce","Precoce","Medio","Tardio"))) |>
# creating an identifier
mutate(idCombi = as.factor(paste(Local, Ano, Ciclo4, sep = "_")),
id = as.numeric(idCombi))
# creating oceanic season variable
soybean_data <- soybean_data |>
mutate(Temp = case_when(
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2017 & month(Plantio) == 11 & year(Colheita) == 2018 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-0.9,-0.9,-0.7),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5),
year(Plantio) == 2017 & month(Plantio) == 12 & year(Colheita) == 2018 & month(Colheita) == 4 ~ mean(-0.8,-1.0,-0.9,-0.9,-0.7,-0.5,-0.2),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 2 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4),
year(Plantio) == 2019 & month(Plantio) == 11 & year(Colheita) == 2020 & month(Colheita) == 3 ~ mean(0.3,0.5,0.5,0.5,0.5,0.4,0.2),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 2 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8),
year(Plantio) == 2020 & month(Plantio) == 11 & year(Colheita) == 2021 & month(Colheita) == 3 ~ mean(-1.2,-1.3,-1.2,-1.0,-0.9,-0.8,-0.7),
year(Plantio) == 2021 & month(Plantio) == 10 & year(Colheita) == 2022 & month(Colheita) == 2 ~ mean(-0.7,-0.8,-1.0,-1.0,-1.0,-0.9,-1.0),
year(Plantio) == 2021 & month(Plantio) == 11 & year(Colheita) == 2022 & month(Colheita) == 3 ~ mean(-0.8,-1.0,-1.0,-1.0,-0.9,-1.0,-1.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 2 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1),
year(Plantio) == 2022 & month(Plantio) == 11 & year(Colheita) == 2023 & month(Colheita) == 3 ~ mean(-1.0,-0.9,-0.8,-0.7,-0.4,-0.1,0.2),
)) |>
mutate(Caracteristica = cut(Temp, breaks = c(-2, -0.5, 0.5), labels = c("LaNina", "Neutro")))
# creating Group variable of interactions Solo, Ciclo and Caracteristica
soybean_data <- soybean_data |>
#mutate(tha = kgha/1000) |>
mutate(Grupo = case_when(
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G2",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G3",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G4",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G5",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G6",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G7",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G8",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G9",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G10",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G11",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G12",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G13",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G14",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G15",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G16",
.default = "outro"
)) |>
mutate(Grupo = factor(Grupo, levels = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9",
"G10", "G11", "G12", "G13", "G14", "G15", "G16"))) |>
mutate(Grupo2 = case_when(
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G2",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G3",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G5",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G6",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G9",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G10",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G11",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G12",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G13",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G14",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G15",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G16",
.default = "outro"
)) |>
mutate(Grupo2 = factor(Grupo2, levels = c("G1", "G2", "G3", "G5", "G6", "G9",
"G10", "G11", "G12", "G13", "G14", "G15", "G16")))
# excluding outliers from the dataset
soybean_data <- soybean_data[-c(265, 289, 316, 374, 770),]
# para ajuste do modelo GLS 3
# grupos G4, G7, G8 e G11 jogados no intercepto G1
soybean_data <- soybean_data |>
mutate(Grupo3 = case_when(
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G2",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "LaNina" ~ "G3",
Solo == "Plintossolo" & Ciclo4 == "Super Precoce" & Caracteristica == "Neutro" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G5",
Solo == "Latossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G6",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "LaNina" ~ "G1",
Solo == "Plintossolo" & Ciclo4 == "Precoce" & Caracteristica == "Neutro" ~ "G1",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G9",
Solo == "Latossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G10",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "LaNina" ~ "G1",
Solo == "Plintossolo" & Ciclo4 == "Medio" & Caracteristica == "Neutro" ~ "G12",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G13",
Solo == "Latossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G14",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "LaNina" ~ "G15",
Solo == "Plintossolo" & Ciclo4 == "Tardio" & Caracteristica == "Neutro" ~ "G16",
.default = "outro"
)) |>
mutate(Grupo3 = factor(Grupo3, levels = c("G1", "G2", "G3", "G5", "G6", "G9",
"G10", "G12", "G13", "G14", "G15", "G16")))
# para ajuste dos modelos GLS 6 e 7
soybean_data <- soybean_data |>
group_by(id) |>
mutate(prodMean = mean(kgha), prodMed = median(kgha))
View(soybean_data)
# Box-Cox response Transformation
bc <- MASS::boxcox(mod1.lm)
lambda <- bc$x[which.max(bc$y)]
# Box-Cox response Transformation
mod1.lm <- lm(kgha ~ Solo*Ciclo4*Caracteristica, data = soybean_data)
bc <- MASS::boxcox(mod1.lm)
lambda <- bc$x[which.max(bc$y)]
soybean_data$kghaT <- (soybean_data$kgha^lambda - 1)/lambda
##### BIBLIOTECAS ####
library(DHARMa)
mod1.lme <- lme(fixed = kgha ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
mod2.lme <- lme(fixed = kgha ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod3.lme <- lme(fixed = kgha ~ Grupo, data = soybean_data, random = ~1|Cultivar)
mod4.lme <- lme(fixed = kgha ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
mod5.lme <- lme(fixed = kghaT ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
mod6.lme <- lme(fixed = kghaT ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod7.lme <- lme(fixed = kghaT ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod8.lme <- lme(fixed = kghaT ~ Grupo, data = soybean_data, random = ~1|Cultivar)
mod9.lme <- lme(fixed = kghaT ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
mod10.lme <- lme(fixed = (kgha)^0.47 ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
mod11.lme <- lme(fixed = (kgha)^0.47 ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod12.lme <- lme(fixed = (kgha)^0.47 ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod13.lme <- lme(fixed = (kgha)^0.47 ~ Grupo, data = soybean_data, random = ~1|Cultivar)
mod14.lme <- lme(fixed = (kgha)^0.47 ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
mod15.lme <- lme(fixed =  log(kgha) ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar)
mod16.lme <- lme(fixed =  log(kgha) ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod17.lme <- lme(fixed =  log(kgha) ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
mod18.lme <- lme(fixed =  log(kgha) ~ Grupo, data = soybean_data, random = ~1|Cultivar)
mod19.lme <- lme(fixed =  log(kgha) ~ Grupo2, data = soybean_data, random = ~1|Cultivar)
mod1.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
mod1.lme$coefficients$random
mod12.lme$coefficients$random
mod6.lme$coefficients$random
mod1.glmm@u
?glmer
mod2.glmm <- glmer(formula = kgha ~ Solo*Ciclo4 + Solo*Caracteristica + Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
summary(mod2.glmm)
mod2.glmm@u
mod6.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "inverse"))
mod6.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "1/mu^2"))
mod6.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = inverse.gaussian(link = "1/mu^2"))
# family inverse.gaussian link inverse
mod6.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = inverse.gaussian(link = "inverse"))
# family inverse.gaussian link inverse
mod6.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = inverse.gaussian(link = "log"))
?nlme
?lme
fit1.lme <- nlme::lme(fixed = kgha ~ Solo*Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar,
weights = varIdent(form = ~1|Cultivar))
summary(fit1.lme)
shapiro.test(fit1.lme$coefficients$random)
shapiro.test(random.effects(fit1.lme))
random.effects(fit1.lme)
View(fit1.lme)
shapiro.test(fit1.lme$coefficients$random$Cultivar)
shapiro.test(resid(fit1.lme))
hist(resid(fit1.lme))
shapiro.test(rstandard(fit1.lme))
shapiro.test(fit1.lme$residuals)
mod6.glmm <- glmer(formula = kghaT ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
shapiro.test(mod1.glmm@u)
mod6.glmm@u
mod6.glmm <- glmer(formula = log(kgha) ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
mod6.glmm@u
shapiro.test(mod6.glmm@u)
mod6.glmm <- glmer(formula = kgha^0.47 ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
shapiro.test(mod6.glmm@u)
mod7.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
summary(mod7.glmm)
shapiro.test(mod7.glmm@u)
mod7.glmm <- glmer(formula = kgha^0.47 ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
shapiro.test(mod7.glmm@u)
summary(mod7.glmm)
mod8.glmm <- glmer(formula = kgha^0.47 ~ Grupo + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
shapiro.test(mod8.glmm@u)
summary(mod8.glmm)
simulationOutput <- simulateResiduals(fittedModel = mod8.glmm)
plot(simulationOutput)
# obtém os resíduos escalonados simulados
simulationOutput <- simulateResiduals(fittedModel = mod7.glmm, plot = F)
plot(simulationOutput)
shapiro.test(mod7.glmm@u)
summary(mod7.glmm)
summary(mod7.glmm)
# obtém os resíduos escalonados simulados
simulationOutput <- simulateResiduals(fittedModel = mod7.glmm, plot = F)
plot(simulationOutput)
mod8.glmm <- glmer(formula = kgha^0.47 ~ Grupo + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"))
shapiro.test(mod8.glmm@u)
summary(mod8.glmm)
simulationOutput <- simulateResiduals(fittedModel = mod8.glmm)
plot(simulationOutput)
mod9.glmm <- glmer(formula = kgha^0.47 ~ Grupo + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"),
weights = varIdent(form = ~1|Cultivar))
mod9.glmm <- glmer(formula = kgha^0.47 ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"),
weights = varIdent(form = ~1|Cultivar))
shapiro.test(fit1.lme$coefficients$random$Cultivar)
shapiro.test(fit1.lme$residuals)
summary(fit1.lme)
fit2.lme <- nlme::lme(fixed = kgha ~ Solo*Ciclo4 + Ciclo4*Caracteristica + Solo*Caracteristica,
data = soybean_data, random = ~1|Cultivar,
weights = varIdent(form = ~1|Cultivar))
shapiro.test(fit2.lme$coefficients$random$Cultivar)
shapiro.test(fit2.lme$residuals)
summary(fit2.lme)
fit3.lme <- nlme::lme(fixed = kgha ~ Grupo,
data = soybean_data, random = ~1|Cultivar,
weights = varIdent(form = ~1|Cultivar))
shapiro.test(fit3.lme$coefficients$random$Cultivar)
shapiro.test(fit3.lme$residuals)
summary(fit3.lme)
fit4.lme <- nlme::lme(fixed = log(kgha) ~ Solo*Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar,
weights = varIdent(form = ~1|Cultivar))
shapiro.test(fit4.lme$coefficients$random$Cultivar)
shapiro.test(fit4.lme$residuals)
summary(fit4.lme)
fit5.lme <- nlme::lme(fixed = log(kgha) ~ Solo*Ciclo4 + Ciclo4*Caracteristica + Solo*Caracteristica,
data = soybean_data, random = ~1|Cultivar,
weights = varIdent(form = ~1|Cultivar))
shapiro.test(fit5.lme$coefficients$random$Cultivar)
shapiro.test(fit5.lme$residuals)
summary(fit5.lme)
fit6.lme <- nlme::lme(fixed = log(kgha) ~ Grupo,
data = soybean_data, random = ~1|Cultivar,
weights = varIdent(form = ~1|Cultivar))
hist(resid(mod1.lm))
shapiro.test(mod7.glmm@u)
# obtém os resíduos escalonados simulados
simulationOutput <- simulateResiduals(fittedModel = mod7.glmm, plot = F)
plot(simulationOutput)
mod1.glmm@u
# link inverse
mod6.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "inverse"))
hist(soybean_data$kgha)
shapiro.test(mod7.glmm@u)
# obtém os resíduos escalonados simulados
simulationOutput <- simulateResiduals(fittedModel = mod7.glmm, plot = F)
plot(simulationOutput)
mod20.glm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = Gamma)
mod2.glmm@u
mod20.glm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = Gamma(link = "1/mu^2"))
mod20.glm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = Gamma(link = "log"))
mod2.glmm@u
mod9.glmm <- glmer(formula = kgha^0.47 ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "log"),
weights = varIdent(form = ~1|Cultivar))
mod <- lme(fixed = kgha ~ Solo*Ciclo4*Caracteristica, data = soybean_data,
random = ~1|Cultivar, weights = varIdent(form = ~1|Cultivar) )
summary(fit1.lme)
shapiro.test(fit1.lme$residuals)
?resid
shapiro.test(rstandard(fit1.lme))
?residuals
shapiro.test(mod1.glmm@u)
mod1.glmm@u
mod1.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "identity"))
shapiro.test(mod1.glmm@u)
mod1.glmm@u
shapiro.test(mod1.glmm@u)
# obtém os resíduos escalonados simulados
simulationOutput <- simulateResiduals(fittedModel = mod1.glmm, plot = F)
plot(simulationOutput)
# obtém os resíduos escalonados simulados
simulationOutput <- simulateResiduals(fittedModel = mod1.glmm, , quantileFunction = qnorm, outlierValues = c(-7,7))
mod1.glmm <- glmer(formula = kgha ~ Solo*Ciclo4*Caracteristica + (1|Cultivar),
data = soybean_data, family = gaussian(link = "identity"),
weights = varIdent(1|Cultivar))
install.packages("lmerTest")
resid(mod1.glmm, type = "Pearson")
resid(mod1.glmm, type = "pearson")
shapiro.test(resid(mod1.glmm, type = "pearson"))
qqplot(resid(mod1.glmm, type="pearson"))
?qqplot
qqplot(y = resid(mod1.glmm, type="pearson"))
summary(mod1.lme)
shapiro.test(resid(mod12.lme))
shapiro.test(resid(mod13.lme))
ks.test(resid(mod12.lme), "dnorm")
bc <- MASS::boxcox(mod1.lm)
summary(bc)
summary(bc$y)
summary(bc$x)
lambda <- 0.9
soybean_data$kghaT <- (soybean_data$kgha^lambda - 1)/lambda
mod12.lme <- lme(fixed = kghaT ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
library(nlme)
mod12.lme <- lme(fixed = kghaT ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
shapiro.test(resid(mod12.lme))
tseries::jarque.bera.test(resid(mod12.lme)) # rejeita normalidade
mod12.lme <- lme(fixed = kgha^0.64 ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod12.lme)) # rejeita normalidade
shapiro.test(resid(mod12.lme))
mod12.lme <- lme(fixed = kgha^0.54 ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
shapiro.test(resid(mod12.lme))
tseries::jarque.bera.test(resid(mod12.lme)) # rejeita normalidade
mod12.lme <- lme(fixed = kgha^0.4 ~ Solo*Ciclo4 + Ciclo4*Caracteristica,
data = soybean_data, random = ~1|Cultivar)
tseries::jarque.bera.test(resid(mod12.lme)) # rejeita normalidade
shapiro.test(resid(mod12.lme))
View(soybean_data)
